# Generated by Django 5.0.4 on 2024-05-05 07:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                ("addr_id", models.AutoField(primary_key=True, serialize=False)),
                ("apt_number", models.CharField(blank=True, max_length=10, null=True)),
                ("street_name", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=50)),
                ("state", models.CharField(max_length=50)),
                ("country", models.CharField(max_length=50)),
                ("zip_code", models.CharField(max_length=10)),
                ("latitude", models.FloatField(default=0.0)),
                ("longitude", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "address",
            },
        ),
        migrations.CreateModel(
            name="Hoods",
            fields=[
                ("hood_id", models.AutoField(primary_key=True, serialize=False)),
                ("hood_name", models.CharField(max_length=50, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "hoods",
            },
        ),
        migrations.CreateModel(
            name="Blocks",
            fields=[
                ("block_id", models.AutoField(primary_key=True, serialize=False)),
                ("block_name", models.CharField(max_length=50, unique=True)),
                ("block_description", models.TextField(default="")),
                ("latitude", models.FloatField(default=0.0)),
                ("longitude", models.FloatField(default=0.0)),
                ("radius", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "hood_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.hoods"
                    ),
                ),
            ],
            options={
                "db_table": "blocks",
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("user_name", models.TextField(unique=True)),
                ("password", models.TextField(default="test@123")),
                ("first_name", models.TextField()),
                ("last_name", models.TextField()),
                ("email", models.TextField()),
                ("phone_number", models.TextField()),
                ("number_of_family_members", models.IntegerField()),
                ("user_photo", models.BinaryField(null=True)),
                ("intro", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "addr_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.address"
                    ),
                ),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="Thread",
            fields=[
                ("thread_id", models.AutoField(primary_key=True, serialize=False)),
                ("thread_title", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "first_sender_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.users"
                    ),
                ),
            ],
            options={
                "db_table": "thread",
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                ("message_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.CharField(
                        choices=[
                            ("friend", "Friend"),
                            ("neighbor", "Neighbor"),
                            ("block", "Block"),
                            ("hood", "Hood"),
                        ],
                        max_length=15,
                    ),
                ),
                ("text_body", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "addr_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.address",
                    ),
                ),
                (
                    "block_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.blocks",
                    ),
                ),
                (
                    "hood_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.hoods",
                    ),
                ),
                (
                    "reply_to_message_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.message",
                    ),
                ),
                (
                    "thread_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.thread"
                    ),
                ),
                (
                    "friend_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message_friend",
                        to="myapp.users",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.users"
                    ),
                ),
            ],
            options={
                "db_table": "message",
            },
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                ("membership_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("approved", "Approved"),
                            ("not approved", "Not Approved"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "permissions",
                    models.CharField(
                        choices=[("read", "Read"), ("write", "Write")], max_length=10
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "block_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.blocks"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.users"
                    ),
                ),
            ],
            options={
                "db_table": "membership",
            },
        ),
        migrations.CreateModel(
            name="Applications",
            fields=[
                ("application_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "application_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "block_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.blocks"
                    ),
                ),
                (
                    "applicant_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.users"
                    ),
                ),
            ],
            options={
                "db_table": "applications",
            },
        ),
        migrations.CreateModel(
            name="Votes",
            fields=[
                ("vote_id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "application_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="myapp.applications",
                    ),
                ),
                (
                    "voter_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.users"
                    ),
                ),
            ],
            options={
                "db_table": "votes",
            },
        ),
        migrations.CreateModel(
            name="Neighbors",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "neighbor_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="neighbor_neighbor",
                        to="myapp.users",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="neighbor_user",
                        to="myapp.users",
                    ),
                ),
            ],
            options={
                "db_table": "neighbors",
                "unique_together": {("user_id", "neighbor_id")},
            },
        ),
        migrations.CreateModel(
            name="Friendship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "friend_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friendship_friend",
                        to="myapp.users",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="friendship_user",
                        to="myapp.users",
                    ),
                ),
            ],
            options={
                "db_table": "friendship",
                "unique_together": {("user_id", "friend_id")},
            },
        ),
    ]
